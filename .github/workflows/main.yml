name: CI/CD BookStore App

on:
  push:
    branches:
      - main # Zmień na gałąź, na której pracujesz, np. 'master' lub 'develop'

env:
  AZURE_CONTAINER_REGISTRY: ksiazkarniacr.azurecr.io # Zmień na nazwę Twojego ACR
  AZURE_CR_USERNAME: ${{ secrets.AZURE_CR_USERNAME }} # Zmienne środowiskowe z GitHub Secrets
  AZURE_CR_PASSWORD: ${{ secrets.AZURE_CR_PASSWORD }} # Zmienne środowiskowe z GitHub Secrets
  
  # Next.js environment variables for the frontend build
  NEXT_PUBLIC_BACKEND_URL: http://backend:1323 # To może być zmienione na publiczny URL w kroku deploymentu
  NEXT_PUBLIC_BACKEND_URL_INTERNAL: http://backend:1323 # To samo

jobs:
  build_and_push_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ env.AZURE_CR_USERNAME }}
          password: ${{ env.AZURE_CR_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build ./server -t ${{ env.AZURE_CONTAINER_REGISTRY }}/bookstore-backend:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/bookstore-backend:${{ github.sha }}
        # build context for backend is ./server, so Dockerfile is ./server/Dockerfile

      - name: Build and push frontend image
        run: |
          docker build ./client -t ${{ env.AZURE_CONTAINER_REGISTRY }}/bookstore-frontend:${{ github.sha }}
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/bookstore-frontend:${{ github.sha }}
        # build context for frontend is ./client, so Dockerfile is ./client/Dockerfile
        # Note: If your next.config.js has specific environment variables,
        # you might need to pass them during the build, e.g., --build-arg VARIABLE=value
